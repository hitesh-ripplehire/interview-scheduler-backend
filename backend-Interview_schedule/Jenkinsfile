// pipeline {
//     agent any
//     environment {
//         BACKEND_DIR = 'backend-Interview_schedule'
//         JAR_PATH = 'target/*.jar'
//         // LOG_FILE = '/home/admin1/backend.log
//         LOG_FILE = '/var/lib/jenkins/workspace/Schedule interview backend/backend-Interview_schedule/target/backend.log'
//         SERVER_PORT = '8081'
//     }
//     stages {
//         stage('Clone Repository') {
//             steps {
//                 echo "Cloning the backend repository..."
//                 git branch: 'main', url: 'https://github.com/hitesh-ripplehire/interview-scheduler-backend.git'
//             }
//         }
//         stage('Build Backend') {
//             steps {
//                 echo "Building the backend application using Maven..."
//                 dir(BACKEND_DIR) {
//                     sh 'mvn clean package -DskipTests'
//                 }
//             }
//         }
//         // stage('Deploy Backend') {
//         //     steps {
//         //         echo "Deploying the backend application..."
//         //         dir(BACKEND_DIR) {
//         //             sh '''
//         //             echo "Checking for existing backend process..."
//         //             PID=$(lsof -t -i:${SERVER_PORT} || true)

//         //             if [ ! -z "$PID" ]; then
//         //                 echo "Stopping existing backend process with PID $PID..."
//         //                 kill -9 $PID
//         //                 echo "Stopped the existing backend process."
//         //             else
//         //                 echo "No existing backend process found."
//         //             fi

//         //             echo "Checking if JAR file exists..."
//         //             JAR_FILE=$(ls ${JAR_PATH} 2>/dev/null | head -n 1)

//         //             if [ -z "$JAR_FILE" ]; then
//         //                 echo "Error: No JAR file found in target/ directory!"
//         //                 exit 1
//         //             fi

//         //             echo "Starting new backend process..."
//         //             nohup java -jar ${JAR_PATH} --server.port=${SERVER_PORT} > ${LOG_FILE} 2>&1 &
//         //             echo "Backend deployed successfully and running on port ${SERVER_PORT}."
//         //             '''
//         //             sh 'pkill -f "Interview_schedule-0.0.1-SNAPSHOT.jar" || true'
//         //             sh 'nohup java -jar /var/lib/jenkins/workspace/Schedule interview backend/backend-Interview_schedule/target/Interview_schedule-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &'
//         //             // nohup java -jar target/Interview_schedule-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &

//         //         }
//         //     }
//         // }

//         stage('Deploy Backend') {
//     steps {
//         echo "Deploying the backend application..."
//         dir(BACKEND_DIR) {
//             sh '''
//             echo "Checking for existing backend process..."
//             PID=$(lsof -t -i:${SERVER_PORT} || true)

//             if [ ! -z "$PID" ]; then
//                 echo "Stopping existing backend process with PID $PID..."
//                 kill -9 $PID
//                 echo "Stopped the existing backend process."
//             else
//                 echo "No existing backend process found."
//             fi

//             echo "Checking if JAR file exists..."
//             JAR_FILE=$(ls ${JAR_PATH} 2>/dev/null | head -n 1)

//             if [ -z "$JAR_FILE" ]; then
//                 echo "Error: No JAR file found in target/ directory!"
//                 exit 1
//             fi

//             echo "Starting new backend process..."
//             nohup java -jar ${JAR_PATH} --server.port=${SERVER_PORT} > ${LOG_FILE} 2>&1 &

//             echo "Backend deployed successfully and running on port ${SERVER_PORT}."
//             '''
//         }
//     }
// }

//     }
//     post {
//         success {
//             echo "✅ Backend build and deployment completed successfully!"
//         }
//         failure {
//             echo "❌ Backend build or deployment failed. Check logs at ${LOG_FILE}."
//         }
//     }
// }







pipeline {
    agent any
    environment {
        IMAGE_NAME = "interview-scheduler-backend"
        CONTAINER_NAME = "backend-container"
        SERVER_PORT = "8081"
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/hitesh-ripplehire/interview-scheduler-backend.git'
            }
        }
        stage('Build Backend') {
            steps {
                dir('backend-Interview_schedule') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('backend-Interview_schedule') {
                    sh 'docker build -t ${IMAGE_NAME} .'
                }
            }
        }
        stage('Deploy Backend') {
            steps {
                sh '''
                docker stop ${CONTAINER_NAME} || true
                docker rm ${CONTAINER_NAME} || true
                docker run -d --name ${CONTAINER_NAME} -p ${SERVER_PORT}:8081 ${IMAGE_NAME}
                '''
            }
        }
    }
    post {
        success {
            echo "✅ Backend deployment successful!"
        }
        failure {
            echo "❌ Backend deployment failed."
        }
    }
}
